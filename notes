features:

static analysis:
  - strings
  - elf section/program headers
  - disassembly??
  - fuzzy hash
  - sha256, md5 hashes
  - upx unpacking??

dynamic analysis:
  - support for multiple architectures (via buildroot/qemu)
    - vm comes with gdb/gdbserver for debugging if required
  - network simulation and packet capture (inetsim/dumpcap)
  - filesystem tracking (inotifywatch) - open, edit delete (and which process)
  - system call tracing (strace -ff) - (cross reference with fs changes)
  - library call tracing if sample is dynamically linked (ltrace -f)
  - direct vm access for user (ssh|pipe) if invoked
  - direct qemu monitor access if invoked
  - enabling addition of user-defined / predefined cmd-line arguments

memory analysis:
  - system memory dump (volatility)
  - core dump/analysis

result presentation:
  - domains/ips and ports accessed
  - suricata rule matching
  - filesystem changes/syscall corroboration
  - yara rule matching
  - support for virustotal API

dynamic analysis infrastructure:
  - orchestration within vm coordinated by python script (subprocess)
  - shell scripts set up and reset fakeroot environment
  - files transferred to and from vm via ftp (pure-ftpd) on non-standard port
    (ssh/scp can be killed by malware)
  - communication with vm done by pipe/stdio

todo:
  - set up logging
  - better error handling, more informative
  - create makefile for testing
  - test vm scripts
  - implement fuzzy hashing

subcommands:
  static  
  dynamic --transfer/-x [FTP|SCP]
  full    --transfer/-x [FTP|SCP]
  qemu    --comms/-c [STDIO|SSH]

infrastructure:
  all VMs connected on a network bridge 'br0'
  user-defined number of test VMs and a fake C2 server
  fake c2
    runs sshd on port 2222 for communication with the sandbox orchestrator
    runs inetsim for simulating network services
    runs cowrie honeypot on 22 and 23 for telnet/ssh attack tracking
