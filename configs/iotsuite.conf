# The defualt settings for IoTSuite.
# This configuration file assumes IoTSuite is being run from
# within the root directory of this project.

# General configuration options for the operation of IoTSuite.
[GENERAL]
# The password to run sudo commands with.
# IoTSuite needs to run some shell commands with
# root privileges. To do so, some systems will prompt
# for a password. This allows IoTSuite to autorespond
# to that prompt.
#
# If you prefer not to store your password on a file,
# you can supply the sudo password at invocation
# with the -s or --sudo-passwd command line option.
SudoPasswd = "03032001"
# The directory to place output files in.
# This is where the result file and any created
# files are placed.
OutputDir = "test"
# The temporary working directory for IoTSuite.
# If not present, defaults to $XDG_CACHE_HOME.
WorkingDir = "work"
# The format to export results as.
# Accepted formats are JSON, pickle, and text.
#! not currently honoured
ExportFmt = json,pickle
# Which raw results to export in the output directory.
# By default, only PCAP files are exported.
#! not currently honoured
ExportRaw = pcap
# Which architectures to disallow analysis for.
# This could be put in place to prevent any undefined
# behaviour if the infrastructure for a certain architecture
# is not in place.
DisallowArchs = MIPSEL,M68K,PPC,AMD64,I386

# Static analysis configuration options.
[STATIC]
# The type of hash to generate of the sample.
# Defaults to SHA256 if not present.
# Accepted options: sha256, sha1, md5
HashType = "sha256"
# Enables or disables context-triggered piecewise hashing.
#! not currently honoured
CTPH = yes
# Enables or disables checking for UPX packing.
#! UPX checking not yet implemented
CheckUPX = yes

# Dynamic analysis configuration options.
[DYNAMIC]
# How long in seconds to run the analysis script for.
ExecuteTime = 60
# Which components of the analysis are disabled.
# Accepted options are strace, inotify, dumpcap, none.
Disabled = none

# Configuration settings for heuristics.
#! not currently honoured
[HEURISTICS]
# Enables or disables syscall parsing.
Syscalls = yes
# Enables or disables network PCAP parsing.
Network = yes
# Enables or disables inotify parsing.
Inotify = yes
# The directory containing user plugins.
PluginDir = "plugins"

# Configuration options for the C2 virtual machine.
[CNC]
# The login username and password.
Username = "tester"
Password = "itestmalware"
# The directory containing the image files.
Image = "vms/cnc"
# The time for expect to wait for before timing out.
ExpTimeout = 120
# The login prompt for expect to look out for
# before sending the username and password.
LoginPrompt = "iotsuite-c2 login: "
QMP = yes
# The port to set up the QMP socket on.
QMPPort = 4444
SSH = yes
SSHPort = 2222
IpAddr = 192.168.0.2
MacAddr = 52:54:00:12:34:56

# Global options for the sandbox VMs.
[SANDBOX]
# If any of the following options are under the "SANDBOX"
# section, iot-suite will assume they apply to all sandbox
# virtual machines.

# If an option appears in both this section and its own
# section, the one in the individual section takes precedence.
Username = root
Password = toor
# How long to wait before assuming a timeout on the VM.
ExpTimeout = 300
LoginPrompt = "iotsuite login: "
QMP = no
IpAddr = 192.168.0.3
MacAddr = 52:54:01:12:34:56

# If a section for a supporting architecture is absent, IoTSuite
# will generally be unable to run analysis for samples compiled
# for that particular architecture.

[ARM]
Image = "vms/arm"
QMP = no
QMPPort = 4445

[MIPS]
Image = "vms/mips"
QMP = no
QMPPort = 4446

[MIPSEL]
Image = "vms/mipsel"
QMP = no
QMPPort = 4447

# Network configuration settings.
[NETWORK]
# The path to the QEMU bridge helper.
NicHelper = "/usr/lib/qemu/qemu-bridge-helper"
# The bridge name for QEMU to set up.
BridgeName = "br0"
# The DHCP subnet and the IP address of the bridge.
#! only used to set up the bridge.
#! dhcpd config autogen is in the works.
Subnet = 192.168.0.0/24
IpAddr = 192.168.0.1
# DNS servers to configure DHCPD to give.
#! not currently honoured. see above.
DNSServers = 192.168.0.2
DHCPConf = "configs/dhcpd.conf"
# The port for IoTFTP to use.
FileTrfPort = 65432
# The encoding for IoTFTP to use.
TrfEncoding = ascii

# Iptables rules to be put in place.
# If a rule conflicts with what IoTSuite needs to work,
# an error will be generated and the rule will not be
# put in place.
[IPTABLES]
# Instead of directly parsing from the config,
# IoTSuite can parse a JSON file containing the rule definitions.
#! not currently honoured
UseFile = "iptables.json"
